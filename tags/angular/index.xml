<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>angular on 世风十三学堂</title>
    <link>/tags/angular/</link>
    <description>Recent content in angular on 世风十三学堂</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 28 Dec 2020 16:49:11 +0800</lastBuildDate>
    
	<atom:link href="/tags/angular/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>最新技术选型</title>
      <link>/post/2020/new-solutions/</link>
      <pubDate>Mon, 28 Dec 2020 16:49:11 +0800</pubDate>
      
      <guid>/post/2020/new-solutions/</guid>
      <description>最新技术选型 语言 Reason 可以让您编写简单，快速和优质的类型安全代码，同时利用 JavaScript 和 OCaml 的生态。 OCaml is an industrial strength programming language supporting functional, imperative and object-oriented styles. 一种支持功能、命令和面向对象的工业强度编程语言，一种快速、实用且强类型的编程语言 BuckleScript 不是一个新的编程语言。 它只是将输入的 OCaml，通过一些调整，使其编译为干净、可读的 JavaScript 代</description>
    </item>
    
    <item>
      <title>Umi vs Nuxt vs Ng-alain</title>
      <link>/post/2020/umi-vs-nuxt-vs-ngalain/</link>
      <pubDate>Tue, 28 Jul 2020 11:17:13 +0800</pubDate>
      
      <guid>/post/2020/umi-vs-nuxt-vs-ngalain/</guid>
      <description>概述和思考 很多时候前端开发人员会面对眼花缭乱的框架很难选择。 标题所说的选择实质是三大阵营（React, Vue 和 Angular）的选择。 三个底层框架各有所长，亮点在于： React：更接近函数式编程思想，单向数据流比较清晰，jsx 是不错的创新，熟悉后可结合函数式编程写出比较优雅的组件代码</description>
    </item>
    
    <item>
      <title>Angular 2 相关学习</title>
      <link>/post/2016/2016-11-08-learn-angular-v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/post/2016/2016-11-08-learn-angular-v2/</guid>
      <description>基础 I18n 官方文档如此{:target=&amp;rdquo;_blank&amp;rdquo;}，目前的解决方案似乎很麻烦。 Angular 2 Components: Inputs and Outputs{:target=&amp;rdquo;_blank&amp;rdquo;} The impure AsyncPipe{:target=&amp;rdquo;_blank&amp;rdquo;} Angular2 管道（pipes）{:target=&amp;rdquo;_blank&amp;rdquo;} [Angular 2] Build a select dropdown with *ngFor in Angular 2{:target=&amp;rdquo;_blank&amp;rdquo;} JavaScript Array Methods Reference{:target=&amp;rdquo;_blank&amp;rdquo;} JavaScript Modules: A Beginner’s Guide{:target=&amp;rdquo;_blank&amp;rdquo;} 问题</description>
    </item>
    
    <item>
      <title>Angular 学习</title>
      <link>/post/2019/angular-learning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/post/2019/angular-learning/</guid>
      <description>相关框架 JHipster JHipster is a development platform to generate, develop and deploy Spring Boot + Angular Web applications and Spring microservices. 问题 在 AngularJS 的 controller 中： $scope.pageTitle = dbData.getTitle();，已知该标题从数据库中取出后不会被修改和变化，如下在模板中的写法最好的方式是：【A】 A. &amp;lt;h1 ng-bind=&amp;quot;::pageTitle&amp;quot;&amp;gt;&amp;lt;/h1&amp;gt; B. &amp;lt;h1&amp;gt;&amp;lt;%=pageTitle%&amp;gt;&amp;lt;/h1&amp;gt; C. &amp;lt;h1&amp;gt;\{\{::pageTitle\}\}&amp;lt;/h1&amp;gt; D. &amp;lt;h1&amp;gt;\{\{pageTitle\}\}&amp;lt;/h1&amp;gt; E. &amp;lt;h1 ng-bind=&amp;quot;pageTitle&amp;quot;&amp;gt;&amp;lt;/h1&amp;gt; 修改 model 数据后，自动更新界面上的显示内容，或者在界面上修改内容，更新 model</description>
    </item>
    
    <item>
      <title>Ionic 2 相关学习</title>
      <link>/post/2016/2016-11-08-learn-ionic-v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/post/2016/2016-11-08-learn-ionic-v2/</guid>
      <description>基础 ionic2文档整理 A Guide to Styling an Ionic 2 Application Tips &amp;amp; Tricks for Styling Ionic 2 Applications User-Selected Style Themes in an Ionic 2 Application Vonic简明教程（一）：起步{:target=&amp;rdquo;_blank&amp;rdquo;} SQLite plugin{:target=&amp;rdquo;_blank&amp;rdquo;} Cordova plugin NativeStorage{:target=&amp;rdquo;_blank&amp;rdquo;} Debugging Ionic 2 Apps in Chrome from Visual Studio Code{:target=&amp;rdquo;_blank&amp;rdquo;} Ionic 2 Conference Application{:target=&amp;rdquo;_blank&amp;rdquo;} Ionically Speaking{:target=&amp;rdquo;_blank&amp;rdquo;} 问题 I18n 官方文档如此{:target=&amp;rdquo;_blank&amp;rdquo;</description>
    </item>
    
  </channel>
</rss>